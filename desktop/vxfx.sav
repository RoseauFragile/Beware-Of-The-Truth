{
currentPlayerGP: {
	class: java.lang.Integer
	value: 20
}
currentPlayerHP: {
	class: java.lang.Integer
	value: 50
}
castleOfDoomMapStartPosition: {
	class: com.badlogic.gdx.math.Vector2
	x: 1012.67
	y: 87.329956
}
topWorldMapStartPosition: {
	class: com.badlogic.gdx.math.Vector2
	x: 437
	y: 44
}
playerEquipInventory: []
TOWN_FOLK2: {
	class: bewareofthetruth.entity.EntityConfig
	animationConfig: [
		{
			texturePaths: [
				sprites/characters/Player00.png
				sprites/characters/Player01.png
			]
			gridPoints: [
				{}
				{}
			]
		}
		{
			animationType: IMMOBILE
			texturePaths: [
				sprites/characters/Player00.png
				sprites/characters/Player01.png
			]
			gridPoints: [
				{}
				{}
			]
		}
	]
	state: IMMOBILE
	entityID: TOWN_FOLK2
	conversationConfigPath: conversations/quest_finished.json
	questConfigPath: quests/quest003.json
	currentQuestID: 3
	itemTypeID: NONE
}
playerQuests: [
	{
		class: bewareofthetruth.quest.QuestGraph
		questTasks: {
			2: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: ZONE_TEST
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: scripts/quest003_task002.json
					}
					TARGET_NUM: {
						class: java.lang.String
						value: 1
					}
				}
				id: 2
				taskPhrase: Tu veux rouler sur l'or ?
				questType: FETCH
			}
			1: {
				taskProperties: {
					IS_TASK_COMPLETE: {
						class: java.lang.String
						value: "true"
					}
					TARGET_LOCATION: {
						class: java.lang.String
						value: ZONE_TEST
					}
					TARGET_TYPE: {
						class: java.lang.String
						value: TOWN_FOLK2
					}
				}
				id: 1
				taskPhrase: Rends mon bebe
				questType: RETURN
			}
		}
		questTaskDependencies: {
			2: []
			1: [
				{
					class: bewareofthetruth.quest.QuestTaskDependency
					sourceId: 1
					destinationId: 2
				}
			]
		}
		questTitle: Fini le jeu
		questID: 3
		isQuestComplete: true
		goldReward: 20
		xpReward: 20
	}
]
townMapStartPosition: {
	class: com.badlogic.gdx.math.Vector2
	x: 16
	y: 918.0033
}
currentPlayerMP: {
	class: java.lang.Integer
	value: 50
}
testMapStartPosition: {
	class: com.badlogic.gdx.math.Vector2
	x: 510.667
	y: 1433.333
}
currentPlayerHPMax: {
	class: java.lang.Integer
	value: 50
}
currentPlayerMPMax: {
	class: java.lang.Integer
	value: 50
}
currentTime: {
	class: java.lang.Integer
	value: 0
}
currentPlayerLevel: {
	class: java.lang.Integer
	value: 1
}
currentPlayerXP: {
	class: java.lang.Integer
	value: 20
}
currentPlayerXPMax: {
	class: java.lang.Integer
	value: 200
}
playerInventory: []
currentMapType: {
	class: java.lang.String
	value: ZONE_TEST
}
QUEST003_TASK002: []
}